"use strict";
var Promise = require("bluebird");
var superagent = require("superagent");
function timeSynced(interval, timeout) {
    return new Promise(function (resolve, reject) {
        function checkTime() {
            return new Promise(function (resolve, reject) {
                superagent.get("https://io.kernel.online/date").end(function (err, res) {
                    if (err) {
                        reject(err);
                    }
                    else {
                        if (new Date().getTime() > (res.body.unixtime - 90000)) {
                            resolve(true);
                        }
                        else {
                            reject('not now');
                        }
                    }
                });
            });
        }
        if (!interval)
            interval = 20000;
        if (!timeout)
            timeout = 200;
        var timeoutcycle = 0;
        checkTime().then(function () {
            resolve(true);
        }).catch(function (err) {
            var startcheck = setInterval(function () {
                checkTime().then(function () {
                    timeoutcycle = 0;
                    clearInterval(startcheck);
                    resolve(true);
                }).catch(function (err) {
                    timeoutcycle += 1;
                    if (timeout && timeoutcycle > timeout) {
                        reject('timeout');
                    }
                });
            }, interval);
        });
    });
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = timeSynced;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFZLE9BQU8sV0FBTSxVQUFVLENBQUMsQ0FBQTtBQUNwQyxJQUFZLFVBQVUsV0FBTSxZQUFZLENBQUMsQ0FBQTtBQUl6QyxvQkFBbUMsUUFBaUIsRUFBRSxPQUFnQjtJQUNsRSxNQUFNLENBQUMsSUFBSSxPQUFPLENBQVUsVUFBQyxPQUFPLEVBQUUsTUFBTTtRQUd4QztZQUNJLE1BQU0sQ0FBQyxJQUFJLE9BQU8sQ0FBVSxVQUFDLE9BQU8sRUFBRSxNQUFNO2dCQUV4QyxVQUFVLENBQUMsR0FBRyxDQUFDLCtCQUErQixDQUFDLENBQUMsR0FBRyxDQUFDLFVBQUMsR0FBRyxFQUFFLEdBQUc7b0JBRXpELEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7d0JBQ04sTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFBO29CQUNmLENBQUM7b0JBQUMsSUFBSSxDQUFDLENBQUM7d0JBQ0osRUFBRSxDQUFDLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQzs0QkFDckQsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO3dCQUNsQixDQUFDO3dCQUFDLElBQUksQ0FBQyxDQUFDOzRCQUNKLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQTt3QkFDckIsQ0FBQztvQkFDTCxDQUFDO2dCQUdMLENBQUMsQ0FBQyxDQUFBO1lBQ04sQ0FBQyxDQUFDLENBQUE7UUFFTixDQUFDO1FBR0QsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7WUFBQyxRQUFRLEdBQUcsS0FBSyxDQUFBO1FBQy9CLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO1lBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQTtRQUUzQixJQUFJLFlBQVksR0FBRyxDQUFDLENBQUE7UUFHcEIsU0FBUyxFQUFFLENBQUMsSUFBSSxDQUFDO1lBQ2IsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFBO1FBRWpCLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFDLEdBQUc7WUFFVCxJQUFNLFVBQVUsR0FBRyxXQUFXLENBQUM7Z0JBQzNCLFNBQVMsRUFBRSxDQUFDLElBQUksQ0FBQztvQkFDYixZQUFZLEdBQUcsQ0FBQyxDQUFBO29CQUNoQixhQUFhLENBQUMsVUFBVSxDQUFDLENBQUE7b0JBQ3pCLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQTtnQkFDakIsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQUMsR0FBRztvQkFDVCxZQUFZLElBQUksQ0FBQyxDQUFBO29CQUNqQixFQUFFLENBQUMsQ0FBQyxPQUFPLElBQUUsWUFBWSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUM7d0JBQ2xDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQTtvQkFDckIsQ0FBQztnQkFDTCxDQUFDLENBQUMsQ0FBQTtZQUNOLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQTtRQUVoQixDQUFDLENBQUMsQ0FBQTtJQUdOLENBQUMsQ0FBQyxDQUFBO0FBQ04sQ0FBQztBQXRERDs0QkFzREMsQ0FBQSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFByb21pc2UgZnJvbSBcImJsdWViaXJkXCI7XG5pbXBvcnQgKiBhcyBzdXBlcmFnZW50IGZyb20gXCJzdXBlcmFnZW50XCI7XG5cblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0aW1lU3luY2VkKGludGVydmFsPzogbnVtYmVyLCB0aW1lb3V0PzogbnVtYmVyKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlPGJvb2xlYW4+KChyZXNvbHZlLCByZWplY3QpID0+IHtcblxuXG4gICAgICAgIGZ1bmN0aW9uIGNoZWNrVGltZSgpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZTxib29sZWFuPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cbiAgICAgICAgICAgICAgICBzdXBlcmFnZW50LmdldChcImh0dHBzOi8vaW8ua2VybmVsLm9ubGluZS9kYXRlXCIpLmVuZCgoZXJyLCByZXMpID0+IHtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5ldyBEYXRlKCkuZ2V0VGltZSgpID4gKHJlcy5ib2R5LnVuaXh0aW1lIC0gOTAwMDApKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KCdub3Qgbm93JylcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcblxuICAgICAgICB9XG5cblxuICAgICAgICBpZiAoIWludGVydmFsKSBpbnRlcnZhbCA9IDIwMDAwXG4gICAgICAgIGlmICghdGltZW91dCkgdGltZW91dCA9IDIwMFxuXG4gICAgICAgIGxldCB0aW1lb3V0Y3ljbGUgPSAwXG5cblxuICAgICAgICBjaGVja1RpbWUoKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIHJlc29sdmUodHJ1ZSlcblxuICAgICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7XG5cbiAgICAgICAgICAgIGNvbnN0IHN0YXJ0Y2hlY2sgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgY2hlY2tUaW1lKCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRpbWVvdXRjeWNsZSA9IDBcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChzdGFydGNoZWNrKVxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHRydWUpXG4gICAgICAgICAgICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aW1lb3V0Y3ljbGUgKz0gMVxuICAgICAgICAgICAgICAgICAgICBpZiAodGltZW91dCYmdGltZW91dGN5Y2xlID4gdGltZW91dCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KCd0aW1lb3V0JylcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9LCBpbnRlcnZhbClcblxuICAgICAgICB9KVxuXG5cbiAgICB9KVxufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
